{"is_source_file": true, "format": "TypeScript", "description": "This file provides a simple notes storage API backed by localStorage, including functions for creating, reading, updating, and deleting notes. It also offers a simulated REST API interface with asynchronous methods returning Promises.", "external_files": [], "external_methods": [], "published": ["Note", "getApi", "getAllNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function load(): Note[] { load", "description": "Loads notes from localStorage, returning an array of Note objects or an empty array if parsing fails.", "scope": "", "scopeKind": ""}, {"name": "function save(notes: Note[]) { save", "description": "Saves the provided notes array to localStorage under the specified key.", "scope": "", "scopeKind": ""}, {"name": "function uid(): string { uid", "description": "Generates a unique identifier string using randomness and timestamp.", "scope": "", "scopeKind": ""}, {"name": "export function getAllNotes(): Note[] { getAllNotes", "description": "Returns all notes sorted by most recently updated.", "scope": "", "scopeKind": ""}, {"name": "export function getNote(id: string): Note | undefined { getNote", "description": "Retrieves a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export function createNote(input: Partial<Note> = {}): Note { createNote", "description": "Creates a new note with optional partial input data, assigns default values, and saves it.", "scope": "", "scopeKind": ""}, {"name": "export function updateNote(id: string, patch: Partial<Note>): Note | undefined { updateNote", "description": "Updates an existing note identified by ID with provided patch data, updating timestamps.", "scope": "", "scopeKind": ""}, {"name": "export function deleteNote(id: string): boolean { deleteNote", "description": "Deletes a note by ID, returns false if no note was deleted.", "scope": "", "scopeKind": ""}, {"name": "export function getApi() { getApi", "description": "Returns a simulated REST API with methods for listing, creating, reading, updating, and deleting notes asynchronously.", "scope": "", "scopeKind": ""}], "calls": ["load", "save", "uid", "getAllNotes", "getNote", "createNote", "updateNote", "deleteNote"], "search-terms": ["localStorage", "notes", "storage", "simulated REST API", "Promise-based", "Note type", "notes_app__notes_v1"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^const STORAGE_KEY = \"notes_app__notes_v1\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "after", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const after = before.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const before = load();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function createNote(input: Partial<Note> = {}): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function deleteNote(id: string): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getAllNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function getAllNotes(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getApi", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function getApi() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function getNote(id: string): Note | undefined {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^    ...notes[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "latency", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const latency = () => 120 + Math.random() * 200;$/", "language": "TypeScript", "kind": "constant", "scope": "getApi", "scopeKind": "function"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^function load(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const notes = load();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const notes = load();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^    const raw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "load", "scopeKind": "function"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^function save(notes: Note[]) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^    title: (patch.title ?? notes[idx].title).trim() || \"Untitled\",$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "uid", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^function uid(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^export function updateNote(id: string, patch: Partial<Note>): Note | undefined {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-19623-19172/notes_frontend/src/lib/storage.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "b812a84503811af8fc7687fe6b9a60bf", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/storage.ts", "revision_history": [{"17": ""}]}